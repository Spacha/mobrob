test_sets = {
    "PURE": [
        4100, 4100, 4100, 4100, 4100,
        4000,
        3300, 3200, 3200, 3300, 3300,
        4000,
        4100, 4100, 4100, 4100, 4100,
        4000,
        3300, 3200, 3200, 3300, 3300,
        4000,
        4100, 4100, 4100, 4100, 4100,
        4000,
        3300, 3200, 3200, 3300, 3300,
        4000,
        4100, 4100, 4100, 4100, 4100,
        4000,
        3300, 3200, 3200, 3300, 3300,
        4000,
        4100, 4100, 4100, 4100, 4100
    ],
    "N-1": [
        4100, 4100, 4100, 4100, 4100,
        4000,
        4100,
        3200, 3100, 3200,
        4000,
        4100, 4100, 4100, 4100, 4100
    ],
    "N-2": [
        4100, 4100, 4100, 4100, 4100,
        3300,
        4100,
        3200, 3100, 3200, 3300,
        4100, 4100, 4100, 4100, 4100
    ],
    "N-3": [
        4100, 4100, 4100, 4100, 4100,
        3300, 3200,
        4100,
        3200, 3300,
        4100, 4100, 4100, 4100, 4100
    ]
}

def detect(samples):
    LLIM, ULIM = 3800, 4050

    up_cnt, down_cnt = 0, 0

    is_up = samples[0] >= ULIM
    for s in samples[1::]:
        print(s, end='')
        if is_up:
            if s <= LLIM:
                down_cnt += 1
                if down_cnt >= 3:
                    is_up = False
                    down_cnt = 0
                    print(" (down)", end='')
        else:
            if s >= ULIM:
                up_cnt += 1
                if up_cnt >= 3:
                    is_up = True
                    up_cnt = 0
                    print(" (up)", end='')

        print()

for test_name, test_set in test_sets.items():
    print(f"\nTest: {test_name}\n")
    detect(test_set)